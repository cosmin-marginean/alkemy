[{"name":"CHROME","description":"io.alkemy.config.Browser.CHROME","location":"alkemy/io.alkemy.config/-browser/-c-h-r-o-m-e/index.html","searchKeys":["CHROME","CHROME","io.alkemy.config.Browser.CHROME"]},{"name":"FIREFOX","description":"io.alkemy.config.Browser.FIREFOX","location":"alkemy/io.alkemy.config/-browser/-f-i-r-e-f-o-x/index.html","searchKeys":["FIREFOX","FIREFOX","io.alkemy.config.Browser.FIREFOX"]},{"name":"abstract class Page(val context: AlkemyContext, val relativeUrl: String) : WebDriver","description":"io.alkemy.pom.Page","location":"alkemy/io.alkemy.pom/-page/index.html","searchKeys":["Page","abstract class Page(val context: AlkemyContext, val relativeUrl: String) : WebDriver","io.alkemy.pom.Page"]},{"name":"class AlkemyContext(val config: AlkemyConfig, val webDriverProvider: () -> WebDriver)","description":"io.alkemy.AlkemyContext","location":"alkemy/io.alkemy/-alkemy-context/index.html","searchKeys":["AlkemyContext","class AlkemyContext(val config: AlkemyConfig, val webDriverProvider: () -> WebDriver)","io.alkemy.AlkemyContext"]},{"name":"class AlkemyReport(context: AlkemyContext) : BeforeTestListener, AfterTestListener","description":"io.alkemy.reports.AlkemyReport","location":"alkemy/io.alkemy.reports/-alkemy-report/index.html","searchKeys":["AlkemyReport","class AlkemyReport(context: AlkemyContext) : BeforeTestListener, AfterTestListener","io.alkemy.reports.AlkemyReport"]},{"name":"class AlkemySpecConstructor : ConstructorExtension","description":"io.alkemy.AlkemySpecConstructor","location":"alkemy/io.alkemy/-alkemy-spec-constructor/index.html","searchKeys":["AlkemySpecConstructor","class AlkemySpecConstructor : ConstructorExtension","io.alkemy.AlkemySpecConstructor"]},{"name":"class WebDriverPoolCleaner : AfterProjectListener","description":"io.alkemy.webdriver.WebDriverPoolCleaner","location":"alkemy/io.alkemy.webdriver/-web-driver-pool-cleaner/index.html","searchKeys":["WebDriverPoolCleaner","class WebDriverPoolCleaner : AfterProjectListener","io.alkemy.webdriver.WebDriverPoolCleaner"]},{"name":"data class AlkemyConfig(val browser: Browser = Browser.valueOf(System.getProperty(\"alkemy.browser\", \"chrome\").trim().uppercase()), val baseUrl: String = System.getProperty(\"alkemy.baseUrl\"), val incognito: Boolean = System.getProperty(\"alkemy.incognito\", \"true\").toBoolean(), val maximize: Boolean = System.getProperty(\"alkemy.maximize\", \"true\").toBoolean(), val headless: Boolean = System.getProperty(\"alkemy.headless\", \"false\").toBoolean(), val windowWidth: Int = System.getProperty(\"alkemy.windowWidth\", \"0\").toInt(), val windowHeight: Int = System.getProperty(\"alkemy.windowHeight\", \"0\").toInt(), val implicitWaitMs: Long = System.getProperty(\"alkemy.implicitWaitMs\", \"5000\").toLong(), val testSelectorAttribute: String = System.getProperty(\"alkemy.testSelectorAttribute\", \"data-test-selector\"), val reportConfig: ReportConfig = ReportConfig())","description":"io.alkemy.config.AlkemyConfig","location":"alkemy/io.alkemy.config/-alkemy-config/index.html","searchKeys":["AlkemyConfig","data class AlkemyConfig(val browser: Browser = Browser.valueOf(System.getProperty(\"alkemy.browser\", \"chrome\").trim().uppercase()), val baseUrl: String = System.getProperty(\"alkemy.baseUrl\"), val incognito: Boolean = System.getProperty(\"alkemy.incognito\", \"true\").toBoolean(), val maximize: Boolean = System.getProperty(\"alkemy.maximize\", \"true\").toBoolean(), val headless: Boolean = System.getProperty(\"alkemy.headless\", \"false\").toBoolean(), val windowWidth: Int = System.getProperty(\"alkemy.windowWidth\", \"0\").toInt(), val windowHeight: Int = System.getProperty(\"alkemy.windowHeight\", \"0\").toInt(), val implicitWaitMs: Long = System.getProperty(\"alkemy.implicitWaitMs\", \"5000\").toLong(), val testSelectorAttribute: String = System.getProperty(\"alkemy.testSelectorAttribute\", \"data-test-selector\"), val reportConfig: ReportConfig = ReportConfig())","io.alkemy.config.AlkemyConfig"]},{"name":"data class ReportConfig(val enabled: Boolean = System.getProperty(\"alkemy.report.enabled\", \"true\").toBoolean(), val screenshotDir: String = System.getProperty(\"alkemy.report.screenshotDir\", \"build/reports/screenshots\"), val htmlReportFile: String = System.getProperty(\"alkemy.report.htmlReport\", \"build/reports/extent-report.html\"))","description":"io.alkemy.config.ReportConfig","location":"alkemy/io.alkemy.config/-report-config/index.html","searchKeys":["ReportConfig","data class ReportConfig(val enabled: Boolean = System.getProperty(\"alkemy.report.enabled\", \"true\").toBoolean(), val screenshotDir: String = System.getProperty(\"alkemy.report.screenshotDir\", \"build/reports/screenshots\"), val htmlReportFile: String = System.getProperty(\"alkemy.report.htmlReport\", \"build/reports/extent-report.html\"))","io.alkemy.config.ReportConfig"]},{"name":"enum Browser : Enum<Browser> ","description":"io.alkemy.config.Browser","location":"alkemy/io.alkemy.config/-browser/index.html","searchKeys":["Browser","enum Browser : Enum<Browser> ","io.alkemy.config.Browser"]},{"name":"fun AlkemyConfig(browser: Browser = Browser.valueOf(System.getProperty(\"alkemy.browser\", \"chrome\").trim().uppercase()), baseUrl: String = System.getProperty(\"alkemy.baseUrl\"), incognito: Boolean = System.getProperty(\"alkemy.incognito\", \"true\").toBoolean(), maximize: Boolean = System.getProperty(\"alkemy.maximize\", \"true\").toBoolean(), headless: Boolean = System.getProperty(\"alkemy.headless\", \"false\").toBoolean(), windowWidth: Int = System.getProperty(\"alkemy.windowWidth\", \"0\").toInt(), windowHeight: Int = System.getProperty(\"alkemy.windowHeight\", \"0\").toInt(), implicitWaitMs: Long = System.getProperty(\"alkemy.implicitWaitMs\", \"5000\").toLong(), testSelectorAttribute: String = System.getProperty(\"alkemy.testSelectorAttribute\", \"data-test-selector\"), reportConfig: ReportConfig = ReportConfig())","description":"io.alkemy.config.AlkemyConfig.AlkemyConfig","location":"alkemy/io.alkemy.config/-alkemy-config/-alkemy-config.html","searchKeys":["AlkemyConfig","fun AlkemyConfig(browser: Browser = Browser.valueOf(System.getProperty(\"alkemy.browser\", \"chrome\").trim().uppercase()), baseUrl: String = System.getProperty(\"alkemy.baseUrl\"), incognito: Boolean = System.getProperty(\"alkemy.incognito\", \"true\").toBoolean(), maximize: Boolean = System.getProperty(\"alkemy.maximize\", \"true\").toBoolean(), headless: Boolean = System.getProperty(\"alkemy.headless\", \"false\").toBoolean(), windowWidth: Int = System.getProperty(\"alkemy.windowWidth\", \"0\").toInt(), windowHeight: Int = System.getProperty(\"alkemy.windowHeight\", \"0\").toInt(), implicitWaitMs: Long = System.getProperty(\"alkemy.implicitWaitMs\", \"5000\").toLong(), testSelectorAttribute: String = System.getProperty(\"alkemy.testSelectorAttribute\", \"data-test-selector\"), reportConfig: ReportConfig = ReportConfig())","io.alkemy.config.AlkemyConfig.AlkemyConfig"]},{"name":"fun AlkemyContext(config: AlkemyConfig, webDriverProvider: () -> WebDriver)","description":"io.alkemy.AlkemyContext.AlkemyContext","location":"alkemy/io.alkemy/-alkemy-context/-alkemy-context.html","searchKeys":["AlkemyContext","fun AlkemyContext(config: AlkemyConfig, webDriverProvider: () -> WebDriver)","io.alkemy.AlkemyContext.AlkemyContext"]},{"name":"fun AlkemyContext.use(block: AlkemyContext.() -> Unit)","description":"io.alkemy.use","location":"alkemy/io.alkemy/use.html","searchKeys":["use","fun AlkemyContext.use(block: AlkemyContext.() -> Unit)","io.alkemy.use"]},{"name":"fun AlkemyReport(context: AlkemyContext)","description":"io.alkemy.reports.AlkemyReport.AlkemyReport","location":"alkemy/io.alkemy.reports/-alkemy-report/-alkemy-report.html","searchKeys":["AlkemyReport","fun AlkemyReport(context: AlkemyContext)","io.alkemy.reports.AlkemyReport.AlkemyReport"]},{"name":"fun AlkemySpecConstructor()","description":"io.alkemy.AlkemySpecConstructor.AlkemySpecConstructor","location":"alkemy/io.alkemy/-alkemy-spec-constructor/-alkemy-spec-constructor.html","searchKeys":["AlkemySpecConstructor","fun AlkemySpecConstructor()","io.alkemy.AlkemySpecConstructor.AlkemySpecConstructor"]},{"name":"fun Page(context: AlkemyContext, relativeUrl: String)","description":"io.alkemy.pom.Page.Page","location":"alkemy/io.alkemy.pom/-page/-page.html","searchKeys":["Page","fun Page(context: AlkemyContext, relativeUrl: String)","io.alkemy.pom.Page.Page"]},{"name":"fun ReportConfig(enabled: Boolean = System.getProperty(\"alkemy.report.enabled\", \"true\").toBoolean(), screenshotDir: String = System.getProperty(\"alkemy.report.screenshotDir\", \"build/reports/screenshots\"), htmlReportFile: String = System.getProperty(\"alkemy.report.htmlReport\", \"build/reports/extent-report.html\"))","description":"io.alkemy.config.ReportConfig.ReportConfig","location":"alkemy/io.alkemy.config/-report-config/-report-config.html","searchKeys":["ReportConfig","fun ReportConfig(enabled: Boolean = System.getProperty(\"alkemy.report.enabled\", \"true\").toBoolean(), screenshotDir: String = System.getProperty(\"alkemy.report.screenshotDir\", \"build/reports/screenshots\"), htmlReportFile: String = System.getProperty(\"alkemy.report.htmlReport\", \"build/reports/extent-report.html\"))","io.alkemy.config.ReportConfig.ReportConfig"]},{"name":"fun String.clearText(): String","description":"io.alkemy.AlkemyContext.clearText","location":"alkemy/io.alkemy/-alkemy-context/clear-text.html","searchKeys":["clearText","fun String.clearText(): String","io.alkemy.AlkemyContext.clearText"]},{"name":"fun String.click(): String","description":"io.alkemy.AlkemyContext.click","location":"alkemy/io.alkemy/-alkemy-context/click.html","searchKeys":["click","fun String.click(): String","io.alkemy.AlkemyContext.click"]},{"name":"fun String.shouldBeDisabled(): String","description":"io.alkemy.AlkemyContext.shouldBeDisabled","location":"alkemy/io.alkemy/-alkemy-context/should-be-disabled.html","searchKeys":["shouldBeDisabled","fun String.shouldBeDisabled(): String","io.alkemy.AlkemyContext.shouldBeDisabled"]},{"name":"fun String.shouldBeEnabled(): String","description":"io.alkemy.AlkemyContext.shouldBeEnabled","location":"alkemy/io.alkemy/-alkemy-context/should-be-enabled.html","searchKeys":["shouldBeEnabled","fun String.shouldBeEnabled(): String","io.alkemy.AlkemyContext.shouldBeEnabled"]},{"name":"fun String.shouldBeHidden(): String","description":"io.alkemy.AlkemyContext.shouldBeHidden","location":"alkemy/io.alkemy/-alkemy-context/should-be-hidden.html","searchKeys":["shouldBeHidden","fun String.shouldBeHidden(): String","io.alkemy.AlkemyContext.shouldBeHidden"]},{"name":"fun String.shouldBeVisible(): String","description":"io.alkemy.AlkemyContext.shouldBeVisible","location":"alkemy/io.alkemy/-alkemy-context/should-be-visible.html","searchKeys":["shouldBeVisible","fun String.shouldBeVisible(): String","io.alkemy.AlkemyContext.shouldBeVisible"]},{"name":"fun WebDriver.clearInput(inputName: String): WebDriver","description":"io.alkemy.extensions.clearInput","location":"alkemy/io.alkemy.extensions/clear-input.html","searchKeys":["clearInput","fun WebDriver.clearInput(inputName: String): WebDriver","io.alkemy.extensions.clearInput"]},{"name":"fun WebDriver.clearText(cssSelector: String): WebDriver","description":"io.alkemy.extensions.clearText","location":"alkemy/io.alkemy.extensions/clear-text.html","searchKeys":["clearText","fun WebDriver.clearText(cssSelector: String): WebDriver","io.alkemy.extensions.clearText"]},{"name":"fun WebDriver.click(cssSelector: String): WebDriver","description":"io.alkemy.extensions.click","location":"alkemy/io.alkemy.extensions/click.html","searchKeys":["click","fun WebDriver.click(cssSelector: String): WebDriver","io.alkemy.extensions.click"]},{"name":"fun WebDriver.fillForm(values: Map<String, String>): WebDriver","description":"io.alkemy.extensions.fillForm","location":"alkemy/io.alkemy.extensions/fill-form.html","searchKeys":["fillForm","fun WebDriver.fillForm(values: Map<String, String>): WebDriver","io.alkemy.extensions.fillForm"]},{"name":"fun WebDriver.fillForm(vararg values: Pair<String, String>): WebDriver","description":"io.alkemy.extensions.fillForm","location":"alkemy/io.alkemy.extensions/fill-form.html","searchKeys":["fillForm","fun WebDriver.fillForm(vararg values: Pair<String, String>): WebDriver","io.alkemy.extensions.fillForm"]},{"name":"fun WebDriver.find(cssSelector: String): WebElement","description":"io.alkemy.extensions.find","location":"alkemy/io.alkemy.extensions/find.html","searchKeys":["find","fun WebDriver.find(cssSelector: String): WebElement","io.alkemy.extensions.find"]},{"name":"fun WebDriver.findElements(cssSelector: String): List<WebElement>","description":"io.alkemy.extensions.findElements","location":"alkemy/io.alkemy.extensions/find-elements.html","searchKeys":["findElements","fun WebDriver.findElements(cssSelector: String): List<WebElement>","io.alkemy.extensions.findElements"]},{"name":"fun WebDriver.screenshot(context: AlkemyContext, testCase: TestCase): WebDriver","description":"io.alkemy.extensions.screenshot","location":"alkemy/io.alkemy.extensions/screenshot.html","searchKeys":["screenshot","fun WebDriver.screenshot(context: AlkemyContext, testCase: TestCase): WebDriver","io.alkemy.extensions.screenshot"]},{"name":"fun WebDriver.shouldBeDisabled(cssSelector: String): WebDriver","description":"io.alkemy.assertions.shouldBeDisabled","location":"alkemy/io.alkemy.assertions/should-be-disabled.html","searchKeys":["shouldBeDisabled","fun WebDriver.shouldBeDisabled(cssSelector: String): WebDriver","io.alkemy.assertions.shouldBeDisabled"]},{"name":"fun WebDriver.shouldBeDisabled(cssSelector: String, maxWaitSeconds: Int): WebDriver","description":"io.alkemy.assertions.shouldBeDisabled","location":"alkemy/io.alkemy.assertions/should-be-disabled.html","searchKeys":["shouldBeDisabled","fun WebDriver.shouldBeDisabled(cssSelector: String, maxWaitSeconds: Int): WebDriver","io.alkemy.assertions.shouldBeDisabled"]},{"name":"fun WebDriver.shouldBeEnabled(cssSelector: String): WebDriver","description":"io.alkemy.assertions.shouldBeEnabled","location":"alkemy/io.alkemy.assertions/should-be-enabled.html","searchKeys":["shouldBeEnabled","fun WebDriver.shouldBeEnabled(cssSelector: String): WebDriver","io.alkemy.assertions.shouldBeEnabled"]},{"name":"fun WebDriver.shouldBeEnabled(cssSelector: String, maxWaitSeconds: Int): WebDriver","description":"io.alkemy.assertions.shouldBeEnabled","location":"alkemy/io.alkemy.assertions/should-be-enabled.html","searchKeys":["shouldBeEnabled","fun WebDriver.shouldBeEnabled(cssSelector: String, maxWaitSeconds: Int): WebDriver","io.alkemy.assertions.shouldBeEnabled"]},{"name":"fun WebDriver.shouldBeHidden(cssSelector: String): WebDriver","description":"io.alkemy.assertions.shouldBeHidden","location":"alkemy/io.alkemy.assertions/should-be-hidden.html","searchKeys":["shouldBeHidden","fun WebDriver.shouldBeHidden(cssSelector: String): WebDriver","io.alkemy.assertions.shouldBeHidden"]},{"name":"fun WebDriver.shouldBeVisible(cssSelector: String): WebDriver","description":"io.alkemy.assertions.shouldBeVisible","location":"alkemy/io.alkemy.assertions/should-be-visible.html","searchKeys":["shouldBeVisible","fun WebDriver.shouldBeVisible(cssSelector: String): WebDriver","io.alkemy.assertions.shouldBeVisible"]},{"name":"fun WebDriver.shouldHaveText(cssSelector: String, text: String): WebDriver","description":"io.alkemy.assertions.shouldHaveText","location":"alkemy/io.alkemy.assertions/should-have-text.html","searchKeys":["shouldHaveText","fun WebDriver.shouldHaveText(cssSelector: String, text: String): WebDriver","io.alkemy.assertions.shouldHaveText"]},{"name":"fun WebDriver.submit(): WebDriver","description":"io.alkemy.extensions.submit","location":"alkemy/io.alkemy.extensions/submit.html","searchKeys":["submit","fun WebDriver.submit(): WebDriver","io.alkemy.extensions.submit"]},{"name":"fun WebDriver.typeIn(inputName: String, text: String): WebDriver","description":"io.alkemy.extensions.typeIn","location":"alkemy/io.alkemy.extensions/type-in.html","searchKeys":["typeIn","fun WebDriver.typeIn(inputName: String, text: String): WebDriver","io.alkemy.extensions.typeIn"]},{"name":"fun WebDriverPoolCleaner()","description":"io.alkemy.webdriver.WebDriverPoolCleaner.WebDriverPoolCleaner","location":"alkemy/io.alkemy.webdriver/-web-driver-pool-cleaner/-web-driver-pool-cleaner.html","searchKeys":["WebDriverPoolCleaner","fun WebDriverPoolCleaner()","io.alkemy.webdriver.WebDriverPoolCleaner.WebDriverPoolCleaner"]},{"name":"fun WebElement.clearText(): WebElement","description":"io.alkemy.extensions.clearText","location":"alkemy/io.alkemy.extensions/clear-text.html","searchKeys":["clearText","fun WebElement.clearText(): WebElement","io.alkemy.extensions.clearText"]},{"name":"fun WebElement.clickElement(): WebElement","description":"io.alkemy.extensions.clickElement","location":"alkemy/io.alkemy.extensions/click-element.html","searchKeys":["clickElement","fun WebElement.clickElement(): WebElement","io.alkemy.extensions.clickElement"]},{"name":"fun WebElement.find(cssSelector: String): WebElement","description":"io.alkemy.extensions.find","location":"alkemy/io.alkemy.extensions/find.html","searchKeys":["find","fun WebElement.find(cssSelector: String): WebElement","io.alkemy.extensions.find"]},{"name":"fun WebElement.shouldBeDisabled(): WebElement","description":"io.alkemy.assertions.shouldBeDisabled","location":"alkemy/io.alkemy.assertions/should-be-disabled.html","searchKeys":["shouldBeDisabled","fun WebElement.shouldBeDisabled(): WebElement","io.alkemy.assertions.shouldBeDisabled"]},{"name":"fun WebElement.shouldBeEnabled(): WebElement","description":"io.alkemy.assertions.shouldBeEnabled","location":"alkemy/io.alkemy.assertions/should-be-enabled.html","searchKeys":["shouldBeEnabled","fun WebElement.shouldBeEnabled(): WebElement","io.alkemy.assertions.shouldBeEnabled"]},{"name":"fun WebElement.shouldBeHidden(): WebElement","description":"io.alkemy.assertions.shouldBeHidden","location":"alkemy/io.alkemy.assertions/should-be-hidden.html","searchKeys":["shouldBeHidden","fun WebElement.shouldBeHidden(): WebElement","io.alkemy.assertions.shouldBeHidden"]},{"name":"fun WebElement.shouldBeVisible(): WebElement","description":"io.alkemy.assertions.shouldBeVisible","location":"alkemy/io.alkemy.assertions/should-be-visible.html","searchKeys":["shouldBeVisible","fun WebElement.shouldBeVisible(): WebElement","io.alkemy.assertions.shouldBeVisible"]},{"name":"fun WebElement.shouldHaveClasses(vararg classes: String): WebElement","description":"io.alkemy.assertions.shouldHaveClasses","location":"alkemy/io.alkemy.assertions/should-have-classes.html","searchKeys":["shouldHaveClasses","fun WebElement.shouldHaveClasses(vararg classes: String): WebElement","io.alkemy.assertions.shouldHaveClasses"]},{"name":"fun byTestSelector(value: String): WebElement","description":"io.alkemy.AlkemyContext.byTestSelector","location":"alkemy/io.alkemy/-alkemy-context/by-test-selector.html","searchKeys":["byTestSelector","fun byTestSelector(value: String): WebElement","io.alkemy.AlkemyContext.byTestSelector"]},{"name":"fun chromeDriver(config: AlkemyConfig): WebDriver","description":"io.alkemy.browsers.chromeDriver","location":"alkemy/io.alkemy.browsers/chrome-driver.html","searchKeys":["chromeDriver","fun chromeDriver(config: AlkemyConfig): WebDriver","io.alkemy.browsers.chromeDriver"]},{"name":"fun createTestCaseNode(testCase: TestCase)","description":"io.alkemy.reports.ReportContext.createTestCaseNode","location":"alkemy/io.alkemy.reports/-report-context/create-test-case-node.html","searchKeys":["createTestCaseNode","fun createTestCaseNode(testCase: TestCase)","io.alkemy.reports.ReportContext.createTestCaseNode"]},{"name":"fun firefoxDriver(config: AlkemyConfig): WebDriver","description":"io.alkemy.browsers.firefoxDriver","location":"alkemy/io.alkemy.browsers/firefox-driver.html","searchKeys":["firefoxDriver","fun firefoxDriver(config: AlkemyConfig): WebDriver","io.alkemy.browsers.firefoxDriver"]},{"name":"fun get(relativeUrl: String): WebDriver","description":"io.alkemy.AlkemyContext.get","location":"alkemy/io.alkemy/-alkemy-context/get.html","searchKeys":["get","fun get(relativeUrl: String): WebDriver","io.alkemy.AlkemyContext.get"]},{"name":"fun newWebDriver(): WebDriver","description":"io.alkemy.config.AlkemyConfig.newWebDriver","location":"alkemy/io.alkemy.config/-alkemy-config/new-web-driver.html","searchKeys":["newWebDriver","fun newWebDriver(): WebDriver","io.alkemy.config.AlkemyConfig.newWebDriver"]},{"name":"fun screenshot(testCase: TestCase, description: String? = null, failure: Boolean = false)","description":"io.alkemy.reports.AlkemyReport.screenshot","location":"alkemy/io.alkemy.reports/-alkemy-report/screenshot.html","searchKeys":["screenshot","fun screenshot(testCase: TestCase, description: String? = null, failure: Boolean = false)","io.alkemy.reports.AlkemyReport.screenshot"]},{"name":"fun screenshotFailure(testCase: TestCase, testResult: TestResult)","description":"io.alkemy.reports.AlkemyReport.screenshotFailure","location":"alkemy/io.alkemy.reports/-alkemy-report/screenshot-failure.html","searchKeys":["screenshotFailure","fun screenshotFailure(testCase: TestCase, testResult: TestResult)","io.alkemy.reports.AlkemyReport.screenshotFailure"]},{"name":"fun valueOf(value: String): Browser","description":"io.alkemy.config.Browser.valueOf","location":"alkemy/io.alkemy.config/-browser/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Browser","io.alkemy.config.Browser.valueOf"]},{"name":"fun values(): Array<Browser>","description":"io.alkemy.config.Browser.values","location":"alkemy/io.alkemy.config/-browser/values.html","searchKeys":["values","fun values(): Array<Browser>","io.alkemy.config.Browser.values"]},{"name":"fun withConfig(config: AlkemyConfig): AlkemyContext","description":"io.alkemy.AlkemyContext.Companion.withConfig","location":"alkemy/io.alkemy/-alkemy-context/-companion/with-config.html","searchKeys":["withConfig","fun withConfig(config: AlkemyConfig): AlkemyContext","io.alkemy.AlkemyContext.Companion.withConfig"]},{"name":"infix fun String.find(cssSelector: String): String","description":"io.alkemy.AlkemyContext.find","location":"alkemy/io.alkemy/-alkemy-context/find.html","searchKeys":["find","infix fun String.find(cssSelector: String): String","io.alkemy.AlkemyContext.find"]},{"name":"infix fun String.shouldBeDisabled(maxWaitSeconds: Int): String","description":"io.alkemy.AlkemyContext.shouldBeDisabled","location":"alkemy/io.alkemy/-alkemy-context/should-be-disabled.html","searchKeys":["shouldBeDisabled","infix fun String.shouldBeDisabled(maxWaitSeconds: Int): String","io.alkemy.AlkemyContext.shouldBeDisabled"]},{"name":"infix fun String.shouldBeEnabled(maxWaitSeconds: Int): String","description":"io.alkemy.AlkemyContext.shouldBeEnabled","location":"alkemy/io.alkemy/-alkemy-context/should-be-enabled.html","searchKeys":["shouldBeEnabled","infix fun String.shouldBeEnabled(maxWaitSeconds: Int): String","io.alkemy.AlkemyContext.shouldBeEnabled"]},{"name":"infix fun String.shouldHaveClass(cssClass: String): String","description":"io.alkemy.AlkemyContext.shouldHaveClass","location":"alkemy/io.alkemy/-alkemy-context/should-have-class.html","searchKeys":["shouldHaveClass","infix fun String.shouldHaveClass(cssClass: String): String","io.alkemy.AlkemyContext.shouldHaveClass"]},{"name":"infix fun String.shouldHaveText(text: String): String","description":"io.alkemy.AlkemyContext.shouldHaveText","location":"alkemy/io.alkemy/-alkemy-context/should-have-text.html","searchKeys":["shouldHaveText","infix fun String.shouldHaveText(text: String): String","io.alkemy.AlkemyContext.shouldHaveText"]},{"name":"infix fun String.type(value: String): String","description":"io.alkemy.AlkemyContext.type","location":"alkemy/io.alkemy/-alkemy-context/type.html","searchKeys":["type","infix fun String.type(value: String): String","io.alkemy.AlkemyContext.type"]},{"name":"infix fun WebDriver.elementShouldExist(by: By): WebDriver","description":"io.alkemy.assertions.elementShouldExist","location":"alkemy/io.alkemy.assertions/element-should-exist.html","searchKeys":["elementShouldExist","infix fun WebDriver.elementShouldExist(by: By): WebDriver","io.alkemy.assertions.elementShouldExist"]},{"name":"infix fun WebDriver.shouldHaveText(text: String): WebDriver","description":"io.alkemy.assertions.shouldHaveText","location":"alkemy/io.alkemy.assertions/should-have-text.html","searchKeys":["shouldHaveText","infix fun WebDriver.shouldHaveText(text: String): WebDriver","io.alkemy.assertions.shouldHaveText"]},{"name":"infix fun WebDriver.tagShouldExist(tagName: String): WebDriver","description":"io.alkemy.assertions.tagShouldExist","location":"alkemy/io.alkemy.assertions/tag-should-exist.html","searchKeys":["tagShouldExist","infix fun WebDriver.tagShouldExist(tagName: String): WebDriver","io.alkemy.assertions.tagShouldExist"]},{"name":"infix fun WebElement.shouldBeDisabled(maxWaitSeconds: Int): WebElement","description":"io.alkemy.assertions.shouldBeDisabled","location":"alkemy/io.alkemy.assertions/should-be-disabled.html","searchKeys":["shouldBeDisabled","infix fun WebElement.shouldBeDisabled(maxWaitSeconds: Int): WebElement","io.alkemy.assertions.shouldBeDisabled"]},{"name":"infix fun WebElement.shouldBeEnabled(maxWaitSeconds: Int): WebElement","description":"io.alkemy.assertions.shouldBeEnabled","location":"alkemy/io.alkemy.assertions/should-be-enabled.html","searchKeys":["shouldBeEnabled","infix fun WebElement.shouldBeEnabled(maxWaitSeconds: Int): WebElement","io.alkemy.assertions.shouldBeEnabled"]},{"name":"infix fun WebElement.shouldHaveClass(text: String): WebElement","description":"io.alkemy.assertions.shouldHaveClass","location":"alkemy/io.alkemy.assertions/should-have-class.html","searchKeys":["shouldHaveClass","infix fun WebElement.shouldHaveClass(text: String): WebElement","io.alkemy.assertions.shouldHaveClass"]},{"name":"infix fun WebElement.shouldHaveText(text: String): WebElement","description":"io.alkemy.assertions.shouldHaveText","location":"alkemy/io.alkemy.assertions/should-have-text.html","searchKeys":["shouldHaveText","infix fun WebElement.shouldHaveText(text: String): WebElement","io.alkemy.assertions.shouldHaveText"]},{"name":"inline fun <P : Page> goTo(): P","description":"io.alkemy.AlkemyContext.goTo","location":"alkemy/io.alkemy/-alkemy-context/go-to.html","searchKeys":["goTo","inline fun <P : Page> goTo(): P","io.alkemy.AlkemyContext.goTo"]},{"name":"inline fun <P : Page> next(): P","description":"io.alkemy.pom.Page.next","location":"alkemy/io.alkemy.pom/-page/next.html","searchKeys":["next","inline fun <P : Page> next(): P","io.alkemy.pom.Page.next"]},{"name":"lateinit var extent: ExtentReports","description":"io.alkemy.reports.ReportContext.extent","location":"alkemy/io.alkemy.reports/-report-context/extent.html","searchKeys":["extent","lateinit var extent: ExtentReports","io.alkemy.reports.ReportContext.extent"]},{"name":"object Companion","description":"io.alkemy.AlkemyContext.Companion","location":"alkemy/io.alkemy/-alkemy-context/-companion/index.html","searchKeys":["Companion","object Companion","io.alkemy.AlkemyContext.Companion"]},{"name":"object Companion","description":"io.alkemy.config.AlkemyConfig.Companion","location":"alkemy/io.alkemy.config/-alkemy-config/-companion/index.html","searchKeys":["Companion","object Companion","io.alkemy.config.AlkemyConfig.Companion"]},{"name":"object ReportContext : BeforeProjectListener, AfterProjectListener, PrepareSpecListener","description":"io.alkemy.reports.ReportContext","location":"alkemy/io.alkemy.reports/-report-context/index.html","searchKeys":["ReportContext","object ReportContext : BeforeProjectListener, AfterProjectListener, PrepareSpecListener","io.alkemy.reports.ReportContext"]},{"name":"open override fun <T : Spec> instantiate(clazz: KClass<T>): Spec?","description":"io.alkemy.AlkemySpecConstructor.instantiate","location":"alkemy/io.alkemy/-alkemy-spec-constructor/instantiate.html","searchKeys":["instantiate","open override fun <T : Spec> instantiate(clazz: KClass<T>): Spec?","io.alkemy.AlkemySpecConstructor.instantiate"]},{"name":"open suspend override fun afterAny(testCase: TestCase, result: TestResult)","description":"io.alkemy.reports.AlkemyReport.afterAny","location":"alkemy/io.alkemy.reports/-alkemy-report/after-any.html","searchKeys":["afterAny","open suspend override fun afterAny(testCase: TestCase, result: TestResult)","io.alkemy.reports.AlkemyReport.afterAny"]},{"name":"open suspend override fun afterProject()","description":"io.alkemy.reports.ReportContext.afterProject","location":"alkemy/io.alkemy.reports/-report-context/after-project.html","searchKeys":["afterProject","open suspend override fun afterProject()","io.alkemy.reports.ReportContext.afterProject"]},{"name":"open suspend override fun afterProject()","description":"io.alkemy.webdriver.WebDriverPoolCleaner.afterProject","location":"alkemy/io.alkemy.webdriver/-web-driver-pool-cleaner/after-project.html","searchKeys":["afterProject","open suspend override fun afterProject()","io.alkemy.webdriver.WebDriverPoolCleaner.afterProject"]},{"name":"open suspend override fun beforeAny(testCase: TestCase)","description":"io.alkemy.reports.AlkemyReport.beforeAny","location":"alkemy/io.alkemy.reports/-alkemy-report/before-any.html","searchKeys":["beforeAny","open suspend override fun beforeAny(testCase: TestCase)","io.alkemy.reports.AlkemyReport.beforeAny"]},{"name":"open suspend override fun beforeProject()","description":"io.alkemy.reports.ReportContext.beforeProject","location":"alkemy/io.alkemy.reports/-report-context/before-project.html","searchKeys":["beforeProject","open suspend override fun beforeProject()","io.alkemy.reports.ReportContext.beforeProject"]},{"name":"open suspend override fun prepareSpec(kclass: KClass<out Spec>)","description":"io.alkemy.reports.ReportContext.prepareSpec","location":"alkemy/io.alkemy.reports/-report-context/prepare-spec.html","searchKeys":["prepareSpec","open suspend override fun prepareSpec(kclass: KClass<out Spec>)","io.alkemy.reports.ReportContext.prepareSpec"]},{"name":"val String.inputValue: String","description":"io.alkemy.AlkemyContext.inputValue","location":"alkemy/io.alkemy/-alkemy-context/input-value.html","searchKeys":["inputValue","val String.inputValue: String","io.alkemy.AlkemyContext.inputValue"]},{"name":"val WebDriver.text: String","description":"io.alkemy.extensions.text","location":"alkemy/io.alkemy.extensions/text.html","searchKeys":["text","val WebDriver.text: String","io.alkemy.extensions.text"]},{"name":"val WebElement.classes: List<String>","description":"io.alkemy.extensions.classes","location":"alkemy/io.alkemy.extensions/classes.html","searchKeys":["classes","val WebElement.classes: List<String>","io.alkemy.extensions.classes"]},{"name":"val WebElement.driver: WebDriver","description":"io.alkemy.extensions.driver","location":"alkemy/io.alkemy.extensions/driver.html","searchKeys":["driver","val WebElement.driver: WebDriver","io.alkemy.extensions.driver"]},{"name":"val WebElement.value: String","description":"io.alkemy.extensions.value","location":"alkemy/io.alkemy.extensions/value.html","searchKeys":["value","val WebElement.value: String","io.alkemy.extensions.value"]},{"name":"val baseUrl: String","description":"io.alkemy.config.AlkemyConfig.baseUrl","location":"alkemy/io.alkemy.config/-alkemy-config/base-url.html","searchKeys":["baseUrl","val baseUrl: String","io.alkemy.config.AlkemyConfig.baseUrl"]},{"name":"val browser: Browser","description":"io.alkemy.config.AlkemyConfig.browser","location":"alkemy/io.alkemy.config/-alkemy-config/browser.html","searchKeys":["browser","val browser: Browser","io.alkemy.config.AlkemyConfig.browser"]},{"name":"val config: AlkemyConfig","description":"io.alkemy.AlkemyContext.config","location":"alkemy/io.alkemy/-alkemy-context/config.html","searchKeys":["config","val config: AlkemyConfig","io.alkemy.AlkemyContext.config"]},{"name":"val context: AlkemyContext","description":"io.alkemy.pom.Page.context","location":"alkemy/io.alkemy.pom/-page/context.html","searchKeys":["context","val context: AlkemyContext","io.alkemy.pom.Page.context"]},{"name":"val enabled: Boolean","description":"io.alkemy.config.ReportConfig.enabled","location":"alkemy/io.alkemy.config/-report-config/enabled.html","searchKeys":["enabled","val enabled: Boolean","io.alkemy.config.ReportConfig.enabled"]},{"name":"val fromSystemProperties: AlkemyConfig","description":"io.alkemy.config.AlkemyConfig.Companion.fromSystemProperties","location":"alkemy/io.alkemy.config/-alkemy-config/-companion/from-system-properties.html","searchKeys":["fromSystemProperties","val fromSystemProperties: AlkemyConfig","io.alkemy.config.AlkemyConfig.Companion.fromSystemProperties"]},{"name":"val headless: Boolean","description":"io.alkemy.config.AlkemyConfig.headless","location":"alkemy/io.alkemy.config/-alkemy-config/headless.html","searchKeys":["headless","val headless: Boolean","io.alkemy.config.AlkemyConfig.headless"]},{"name":"val htmlReportFile: String","description":"io.alkemy.config.ReportConfig.htmlReportFile","location":"alkemy/io.alkemy.config/-report-config/html-report-file.html","searchKeys":["htmlReportFile","val htmlReportFile: String","io.alkemy.config.ReportConfig.htmlReportFile"]},{"name":"val implicitWaitMs: Long","description":"io.alkemy.config.AlkemyConfig.implicitWaitMs","location":"alkemy/io.alkemy.config/-alkemy-config/implicit-wait-ms.html","searchKeys":["implicitWaitMs","val implicitWaitMs: Long","io.alkemy.config.AlkemyConfig.implicitWaitMs"]},{"name":"val incognito: Boolean","description":"io.alkemy.config.AlkemyConfig.incognito","location":"alkemy/io.alkemy.config/-alkemy-config/incognito.html","searchKeys":["incognito","val incognito: Boolean","io.alkemy.config.AlkemyConfig.incognito"]},{"name":"val maximize: Boolean","description":"io.alkemy.config.AlkemyConfig.maximize","location":"alkemy/io.alkemy.config/-alkemy-config/maximize.html","searchKeys":["maximize","val maximize: Boolean","io.alkemy.config.AlkemyConfig.maximize"]},{"name":"val relativeUrl: String","description":"io.alkemy.pom.Page.relativeUrl","location":"alkemy/io.alkemy.pom/-page/relative-url.html","searchKeys":["relativeUrl","val relativeUrl: String","io.alkemy.pom.Page.relativeUrl"]},{"name":"val report: AlkemyReport","description":"io.alkemy.AlkemyContext.report","location":"alkemy/io.alkemy/-alkemy-context/report.html","searchKeys":["report","val report: AlkemyReport","io.alkemy.AlkemyContext.report"]},{"name":"val reportConfig: ReportConfig","description":"io.alkemy.config.AlkemyConfig.reportConfig","location":"alkemy/io.alkemy.config/-alkemy-config/report-config.html","searchKeys":["reportConfig","val reportConfig: ReportConfig","io.alkemy.config.AlkemyConfig.reportConfig"]},{"name":"val screenshotDir: String","description":"io.alkemy.config.ReportConfig.screenshotDir","location":"alkemy/io.alkemy.config/-report-config/screenshot-dir.html","searchKeys":["screenshotDir","val screenshotDir: String","io.alkemy.config.ReportConfig.screenshotDir"]},{"name":"val testSelector: String","description":"io.alkemy.AlkemyContext.testSelector","location":"alkemy/io.alkemy/-alkemy-context/test-selector.html","searchKeys":["testSelector","val testSelector: String","io.alkemy.AlkemyContext.testSelector"]},{"name":"val testSelectorAttribute: String","description":"io.alkemy.config.AlkemyConfig.testSelectorAttribute","location":"alkemy/io.alkemy.config/-alkemy-config/test-selector-attribute.html","searchKeys":["testSelectorAttribute","val testSelectorAttribute: String","io.alkemy.config.AlkemyConfig.testSelectorAttribute"]},{"name":"val webDriver: WebDriver","description":"io.alkemy.AlkemyContext.webDriver","location":"alkemy/io.alkemy/-alkemy-context/web-driver.html","searchKeys":["webDriver","val webDriver: WebDriver","io.alkemy.AlkemyContext.webDriver"]},{"name":"val webDriverProvider: () -> WebDriver","description":"io.alkemy.AlkemyContext.webDriverProvider","location":"alkemy/io.alkemy/-alkemy-context/web-driver-provider.html","searchKeys":["webDriverProvider","val webDriverProvider: () -> WebDriver","io.alkemy.AlkemyContext.webDriverProvider"]},{"name":"val windowHeight: Int","description":"io.alkemy.config.AlkemyConfig.windowHeight","location":"alkemy/io.alkemy.config/-alkemy-config/window-height.html","searchKeys":["windowHeight","val windowHeight: Int","io.alkemy.config.AlkemyConfig.windowHeight"]},{"name":"val windowWidth: Int","description":"io.alkemy.config.AlkemyConfig.windowWidth","location":"alkemy/io.alkemy.config/-alkemy-config/window-width.html","searchKeys":["windowWidth","val windowWidth: Int","io.alkemy.config.AlkemyConfig.windowWidth"]}]
